<?php

/**
 * This is the model base class for the table "p8_order".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Order".
 *
 * Columns in table "p8_order" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $confirmation_code
 * @property string $email
 * @property string $order_date
 * @property string $first_name
 * @property string $last_name
 * @property string $shipto_name
 * @property string $shipto_street
 * @property string $shipto_city
 * @property string $shipto_state
 * @property string $shipto_zip
 * @property string $shipto_countrycode
 * @property string $shipto_countryname
 * @property string $total_amt
 * @property string $subtotal_amt
 * @property string $shipping_amt
 * @property string $shipping_type
 * @property string $tax_amt
 * @property string $discount_amt
 * @property string $discount_msg
 * @property string $paypalfee_amt
 * @property string $buyer_note
 * @property string $order_details
 *
 */
abstract class BaseOrder extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'p8_order';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Order|Orders', $n);
	}

	public static function representingColumn() {
		return 'confirmation_code';
	}

	public function rules() {
		return array(
			array('confirmation_code, buyer_note', 'required'),
			array('confirmation_code, email, first_name, last_name, shipto_name, shipto_street, shipto_city, shipto_state, shipto_zip, shipto_countrycode, shipto_countryname, shipping_type, discount_msg', 'length', 'max'=>255),
			array('total_amt, subtotal_amt, shipping_amt, tax_amt, discount_amt, paypalfee_amt', 'length', 'max'=>6),
			array('order_date, order_details', 'safe'),
			array('email, order_date, first_name, last_name, shipto_name, shipto_street, shipto_city, shipto_state, shipto_zip, shipto_countrycode, shipto_countryname, total_amt, subtotal_amt, shipping_amt, shipping_type, tax_amt, discount_amt, discount_msg, paypalfee_amt, order_details', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, confirmation_code, email, order_date, first_name, last_name, shipto_name, shipto_street, shipto_city, shipto_state, shipto_zip, shipto_countrycode, shipto_countryname, total_amt, subtotal_amt, shipping_amt, shipping_type, tax_amt, discount_amt, discount_msg, paypalfee_amt, buyer_note, order_details', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'confirmation_code' => Yii::t('app', 'Confirmation Code'),
			'email' => Yii::t('app', 'Email'),
			'order_date' => Yii::t('app', 'Order Date'),
			'first_name' => Yii::t('app', 'First Name'),
			'last_name' => Yii::t('app', 'Last Name'),
			'shipto_name' => Yii::t('app', 'Shipto Name'),
			'shipto_street' => Yii::t('app', 'Shipto Street'),
			'shipto_city' => Yii::t('app', 'Shipto City'),
			'shipto_state' => Yii::t('app', 'Shipto State'),
			'shipto_zip' => Yii::t('app', 'Shipto Zip'),
			'shipto_countrycode' => Yii::t('app', 'Shipto Countrycode'),
			'shipto_countryname' => Yii::t('app', 'Shipto Countryname'),
			'total_amt' => Yii::t('app', 'Total Amt'),
			'subtotal_amt' => Yii::t('app', 'Subtotal Amt'),
			'shipping_amt' => Yii::t('app', 'Shipping Amt'),
			'shipping_type' => Yii::t('app', 'Shipping Type'),
			'tax_amt' => Yii::t('app', 'Tax Amt'),
			'discount_amt' => Yii::t('app', 'Discount Amt'),
			'discount_msg' => Yii::t('app', 'Discount Msg'),
			'paypalfee_amt' => Yii::t('app', 'Paypalfee Amt'),
			'buyer_note' => Yii::t('app', 'Buyer Note'),
			'order_details' => Yii::t('app', 'Order Details'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('confirmation_code', $this->confirmation_code, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('order_date', $this->order_date, true);
		$criteria->compare('first_name', $this->first_name, true);
		$criteria->compare('last_name', $this->last_name, true);
		$criteria->compare('shipto_name', $this->shipto_name, true);
		$criteria->compare('shipto_street', $this->shipto_street, true);
		$criteria->compare('shipto_city', $this->shipto_city, true);
		$criteria->compare('shipto_state', $this->shipto_state, true);
		$criteria->compare('shipto_zip', $this->shipto_zip, true);
		$criteria->compare('shipto_countrycode', $this->shipto_countrycode, true);
		$criteria->compare('shipto_countryname', $this->shipto_countryname, true);
		$criteria->compare('total_amt', $this->total_amt, true);
		$criteria->compare('subtotal_amt', $this->subtotal_amt, true);
		$criteria->compare('shipping_amt', $this->shipping_amt, true);
		$criteria->compare('shipping_type', $this->shipping_type, true);
		$criteria->compare('tax_amt', $this->tax_amt, true);
		$criteria->compare('discount_amt', $this->discount_amt, true);
		$criteria->compare('discount_msg', $this->discount_msg, true);
		$criteria->compare('paypalfee_amt', $this->paypalfee_amt, true);
		$criteria->compare('buyer_note', $this->buyer_note, true);
		$criteria->compare('order_details', $this->order_details, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}