<?php

/**
 * This is the model base class for the table "p8_feedback".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Feedback".
 *
 * Columns in table "p8_feedback" available as properties of the model,
 * followed by relations of table "p8_feedback" available as properties of the model.
 *
 * @property string $id
 * @property string $comment
 * @property string $geo_location
 * @property string $web_location
 * @property string $date_inserted
 * @property string $product_id
 *
 * @property Product $product
 */
abstract class BaseFeedback extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'p8_feedback';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Feedback|Feedbacks', $n);
	}

	public static function representingColumn() {
		return 'comment';
	}

	public function rules() {
		return array(
			array('comment, geo_location, date_inserted, product_id', 'required'),
			array('geo_location', 'length', 'max'=>256),
			array('web_location', 'length', 'max'=>15),
			array('product_id', 'length', 'max'=>10),
			array('web_location', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, comment, geo_location, web_location, date_inserted, product_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'product' => array(self::BELONGS_TO, 'Product', 'product_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'comment' => Yii::t('app', 'Comment'),
			'geo_location' => Yii::t('app', 'Geo Location'),
			'web_location' => Yii::t('app', 'Web Location'),
			'date_inserted' => Yii::t('app', 'Date Inserted'),
			'product_id' => null,
			'product' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('comment', $this->comment, true);
		$criteria->compare('geo_location', $this->geo_location, true);
		$criteria->compare('web_location', $this->web_location, true);
		$criteria->compare('date_inserted', $this->date_inserted, true);
		$criteria->compare('product_id', $this->product_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}