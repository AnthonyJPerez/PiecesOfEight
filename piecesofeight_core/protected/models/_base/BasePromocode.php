<?php

/**
 * This is the model base class for the table "p8_promocode".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Promocode".
 *
 * Columns in table "p8_promocode" available as properties of the model,
 * followed by relations of table "p8_promocode" available as properties of the model.
 *
 * @property string $id
 * @property string $name
 * @property string $location
 * @property string $type
 * @property string $dollar_discount
 * @property string $percent_discount
 *
 * @property Product[] $p8Products
 */
abstract class BasePromocode extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'p8_promocode';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Promocode|Promocodes', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('type', 'required'),
			array('name, location', 'length', 'max'=>255),
			array('type', 'length', 'max'=>10),
			array('dollar_discount, percent_discount', 'length', 'max'=>6),
			array('name, location, dollar_discount, percent_discount', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, location, type, dollar_discount, percent_discount', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'p8Products' => array(self::MANY_MANY, 'Product', 'p8_product_promocode(promocode_id, product_id)'),
		);
	}

	public function pivotModels() {
		return array(
			'p8Products' => 'ProductPromocode',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'location' => Yii::t('app', 'Location'),
			'type' => Yii::t('app', 'Type'),
			'dollar_discount' => Yii::t('app', 'Dollar Discount'),
			'percent_discount' => Yii::t('app', 'Percent Discount'),
			'p8Products' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('location', $this->location, true);
		$criteria->compare('type', $this->type, true);
		$criteria->compare('dollar_discount', $this->dollar_discount, true);
		$criteria->compare('percent_discount', $this->percent_discount, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}